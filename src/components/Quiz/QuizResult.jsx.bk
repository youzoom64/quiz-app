import React, { useRef, useState } from 'react';
import { Card, CardHeader, CardContent } from '../ui/card';
import { Button } from '../ui/button';
import html2canvas from 'html2canvas';

const QuizResult = function QuizResult({ score, total, wrongQuestions, onRetry }) {
  const resultCardRef = useRef(null);
  const [isSharing, setIsSharing] = useState(false);

  const uploadImage = async (blob) => {
    try {
      const formData = new FormData();
      formData.append('image', blob, 'result.png');

      const response = await fetch('upload.php', {  // PHPアップロードスクリプトのURL
        method: 'POST',
        body: formData
      });

      if (!response.ok) throw new Error('Upload failed');

      const data = await response.json();
      return `https://blueferret.mbsrv.net/quiz-images/${data.filename}`;  // 実際のURLパスに修正
    } catch (error) {
      console.error('Upload error:', error);
      throw error;
    }
  };

  const handleShareToTwitter = async () => {
    try {
      setIsSharing(true);
      console.log('シェア処理開始');

      // 結果表示部分のキャプチャ
      const resultElement = resultCardRef.current.querySelector('.result-content');
      const canvas = await html2canvas(resultElement, {
        backgroundColor: '#ffffff',
        scale: 2,
        logging: true,
        useCORS: true,
        allowTaint: true
      });

      // Canvas を Blob に変換
      const blob = await new Promise(resolve => {
        canvas.toBlob(resolve, 'image/png', 0.9);
      });

      // 画像をアップロード
      const imageUrl = await uploadImage(blob);
      console.log('画像アップロード完了:', imageUrl);

      // メタタグを更新
      document.querySelectorAll('meta[name^="twitter:"]').forEach(el => el.remove());
      const metaTags = [
        { name: 'twitter:card', content: 'summary_large_image' },
        { name: 'twitter:title', content: '科学知識テスト結果' },
        { name: 'twitter:description', content: `${total}点中${score}点でした！` },
        { name: 'twitter:image', content: imageUrl }
      ];

      metaTags.forEach(({ name, content }) => {
        const meta = document.createElement('meta');
        meta.name = name;
        meta.content = content;
        document.head.appendChild(meta);
      });

      const wrongQuestionsText = wrongQuestions.length > 0 
        ? `\n\n間違えた問題：${wrongQuestions.join(', ')}番` 
        : '\n\n全問正解！🎉';

      const shareText = `科学知識テストで${total}点中${score}点でした！${wrongQuestionsText}`;
      const appUrl = 'https://blueferret.mbsrv.net/quiz-app/';

      const twitterUrl = `https://twitter.com/intent/tweet?text=${encodeURIComponent(shareText)}&url=${encodeURIComponent(appUrl)}`;
      window.open(twitterUrl, '_blank');

    } catch (error) {
      console.error('シェアエラー:', error);
      alert('シェアに失敗しました。もう一度お試しください。');
    } finally {
      setIsSharing(false);
    }
  };

  return (
    <Card className="max-w-2xl mx-auto">
      <CardHeader>
        <h2 className="text-2xl font-bold text-center">テスト結果</h2>
      </CardHeader>
      <CardContent>
        <div ref={resultCardRef}>
          <div className="result-content space-y-6 bg-white p-6 rounded-lg">
            <div className="text-center">
              <h3 className="text-xl mb-4">あなたの科学知識テストの結果は...</h3>
              <p className="text-4xl font-bold mb-2">
                {score} / {total}点
              </p>
              <p className="text-lg text-gray-600">
                正答率: {Math.round((score / total) * 100)}%
              </p>
            </div>

            {wrongQuestions.length > 0 && (
              <div className="border-t border-b py-4">
                <p className="font-semibold mb-2">間違えた問題</p>
                <p className="text-red-600">
                  {wrongQuestions.join(', ')}番
                </p>
              </div>
            )}
          </div>

          <div className="share-buttons flex flex-col gap-4 items-center pt-4">
            <Button
              onClick={handleShareToTwitter}
              disabled={isSharing}
              className="bg-blue-500 hover:bg-blue-600 w-full max-w-xs"
            >
              {isSharing ? 'シェア中...' : '結果をXでシェア'}
            </Button>
            <Button
              onClick={onRetry}
              variant="outline"
              className="w-full max-w-xs"
            >
              もう一度挑戦する
            </Button>
          </div>
        </div>
      </CardContent>
    </Card>
  );
};

export default QuizResult;